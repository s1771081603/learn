/**
 * Vue 2 的生命周期钩子及其用途
 *
 * 1. beforeCreate
 *    - 实例初始化之后，数据观测和事件配置之前调用。
 *    - 此时 data、computed、methods 等都还不可用。
 *
 * 2. created
 *    - 实例创建完成，数据观测和事件配置已完成。
 *    - 可以访问 data、computed、methods，适合进行数据初始化、请求接口等操作。
 *
 * 3. beforeMount
 *    - 在挂载开始之前被调用，相关的 render 函数首次被调用。
 *    - 此时 DOM 未生成，适合最后的数据处理。
 *
 * 4. mounted
 *    - el 被新创建的 vm.$el 替换，并挂载到实例上。
 *    - 可以访问真实 DOM，适合操作 DOM 或发起依赖于 DOM 的请求。
 *
 * 5. beforeUpdate
 *    - 数据更新时，虚拟 DOM 重新渲染和打补丁之前调用。
 *    - 可以在此时访问更新前的状态。
 *
 * 6. updated
 *    - 由于数据更改导致的虚拟 DOM 重新渲染和打补丁之后调用。
 *    - 可以操作更新后的 DOM。
 *
 * 7. beforeDestroy
 *    - 实例销毁之前调用。
 *    - 在此阶段可以做清理工作，如解绑事件、清除定时器等。
 *
 * 8. destroyed
 *    - 实例销毁后调用。
 *    - 所有事件监听器和子实例都被移除。
 */

/**
 * Vue 2 中，缓存组件的生命周期钩子：
 * 缓存组件的生命周期钩子是在组件被缓存时触发的，而不是在组件被销毁时触发。
 * activated：组件被激活时调用（即从缓存中恢复显示时）。
 * deactivated：组件被停用时调用（即被缓存但不显示时）。
 * 这两个钩子只在被 <keep-alive> 包裹的组件中有效。普通的生命周期钩子（如 mounted、destroyed）只会在组件首次挂载和销毁时触发，而不会在缓存和激活时重复执行。
 */

