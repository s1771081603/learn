/**
 * 为什么vue中的v-if和v-for不建议一起使用？
 * 1. v-if和v-for不能同时使用在同一个元素上：在Vue中，v-if和v-for指令不能同时应用于同一个元素上。如果需要同时使用，可以将v-if放在一个父元素上，或者使用计算属性来过滤数据。
 * 2. 性能问题：v-for用于渲染列表，而v-if用于条件渲染。如果在一个列表项上使用v-if，会导致每次列表更新时都需要重新计算条件，影响性能。建议先使用v-for渲染列表，然后在列表项内部使用v-if进行条件渲染。
 * 3. 可读性和维护性：将v-if和v-for分开使用，可以提高代码的可读性和维护性。将条件逻辑和列表渲染逻辑分开，有助于理解代码的意图。
 * 4. 使用计算属性：如果需要根据条件渲染列表，可以使用计算属性来过滤数据，然后使用v-for渲染过滤后的列表，而不是在列表项上使用v-if。
 * 总结：为了提高性能和代码的可读性，建议避免在同一个元素上同时使用v-if和v-for。可以通过将v-if放在父元素上，或者使用计算属性来实现条件渲染。
 */