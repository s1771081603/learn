/**
 * 为什么data属性是一个函数而不是箭头函数或者一个对象？
 * 在Vue组件中，data属性通常被定义为一个函数而不是一个对象或箭头函数，主要有以下几个原因：
 * 1. 数据隔离：当data是一个函数时，每次创建组件实例时，都会调用该函数并返回一个新的数据对象。这确保了每个组件实例都有自己的独立数据副本，避免了不同实例之间的数据共享和相互影响。
 *    如果data是一个对象，所有组件实例将共享同一个数据对象，导致数据污染和不可预测的行为。
 * 2. 组件复用：Vue组件通常是可复用的，定义data为函数可以确保每次使用组件时，都会得到一个新的数据对象，从而支持组件的多次实例化和复用。
 * 3. 避免闭包问题：箭头函数不会创建自己的this绑定，这可能导致在组件实例化时无法正确访问组件实例的属性和方法。使用普通函数可以确保this指向正确的组件实例。
 * 4. 一致性：Vue的设计原则之一是保持API的一致性。将data定义为函数与Vue的其他选项（如methods、computed等）保持一致，都是通过函数来定义的。
 * 总结：将data定义为一个函数是为了确保每个组件实例都有独立的数据副本，避免数据污染，支持组件复用，并确保this绑定正确。这是Vue组件设计中的一个重要原则，有助于提高代码的可维护性和可靠性。
 */